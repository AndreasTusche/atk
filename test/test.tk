#!/bin/sh
#============================================================-*-tcl-*-
# NAME
#   test.tk -
#
# SYNOPSIS
#   test.tk
#
# DESCRIPTION
#   read the source :-)
#
#   OPT  - array of user defined options (debug, verbose, colors, ...)
#   PRIV - array of application's private values to remember
#   V    - array of widget related variables
#
# AUTHOR
#   This file was automatically generated by rpt
#
# ====================================================================
# ToDo
# - give some sense to the functions

# --------------------------------------------------------------------
# MODIFICATION HISTORY
#   when      who       what
#   --------- --------- ---------------------------------------------
#   22.07.08  pgf       created with rpt ((C) by tusche@mpia-hd.mpg.de)

# ====================================================================
# restart using wish
# ===================================================================\
exec wish "$0" "$@" -name wish

set OPT(debug) 1

option add *background grey80
option add *activeBackground grey70

# ====================================================================
#  Menu related procedures
# ====================================================================


# --------------------------------------------------------------------
#  mphHelpAbout
# --------------------------------------------------------------------

proc mphHelpAbout {} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphHelpAbout()"}
}


# ====================================================================
#  Widget related Procedures
# ====================================================================


# --------------------------------------------------------------------
#  mphRadio1 - for Radiobuttons in frame .f1, variable V(r1)
# --------------------------------------------------------------------

proc mphRadio1 {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphRadio1($val)"}
}


# --------------------------------------------------------------------
#  mphSet_Default_Values - for Button bSet_Default_Values
# --------------------------------------------------------------------

proc mphSet_Default_Values {} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphSet_Default_Values()"}
}


# --------------------------------------------------------------------
#  mphTIME - for Entry eTIME, textvariable V(TIME)
# --------------------------------------------------------------------

proc mphTIME {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphTIME($val)"}
}


# --------------------------------------------------------------------
#  mphRevolution - for Entry eRevolution, textvariable V(Revolution)
# --------------------------------------------------------------------

proc mphRevolution {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphRevolution($val)"}
}


# --------------------------------------------------------------------
#  mphNUMBER - for Entry eNUMBER, textvariable V(NUMBER)
# --------------------------------------------------------------------

proc mphNUMBER {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphNUMBER($val)"}
}


# --------------------------------------------------------------------
#  mphNUMBER - for Scale sNUMBER, variable V(NUMBER)
# --------------------------------------------------------------------

proc mphNUMBER {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphNUMBER($val)"}
}


# --------------------------------------------------------------------
#  mphPROD_RULES - for Entry ePROD_RULES, textvariable V(PROD_RULES)
# --------------------------------------------------------------------

proc mphPROD_RULES {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphPROD_RULES($val)"}
}


# --------------------------------------------------------------------
#  mphRadio2 - for Radiobuttons in frame .f6, variable V(r2)
# --------------------------------------------------------------------

proc mphRadio2 {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphRadio2($val)"}
}


# --------------------------------------------------------------------
#  mphsite - for Entry esite, textvariable V(site)
# --------------------------------------------------------------------

proc mphsite {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphsite($val)"}
}


# --------------------------------------------------------------------
#  mphRadio3 - for Radiobuttons in frame .f7, variable V(r3)
# --------------------------------------------------------------------

proc mphRadio3 {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphRadio3($val)"}
}


# --------------------------------------------------------------------
#  mphRadio4 - for Radiobuttons in frame .f8, variable V(r4)
# --------------------------------------------------------------------

proc mphRadio4 {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphRadio4($val)"}
}


# --------------------------------------------------------------------
#  mphVCIDFILTERING - for CheckButton cVCIDFILTERING, variable V(VCIDFILTERING) 
# --------------------------------------------------------------------

proc mphVCIDFILTERING {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphVCIDFILTERING($val)"}
}


# --------------------------------------------------------------------
#  mphREVERSE_MODE - for CheckButton cREVERSE_MODE, variable V(REVERSE_MODE) 
# --------------------------------------------------------------------

proc mphREVERSE_MODE {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphREVERSE_MODE($val)"}
}


# --------------------------------------------------------------------
#  mphMinutes - for Entry eMinutes, textvariable V(Minutes)
# --------------------------------------------------------------------

proc mphMinutes {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphMinutes($val)"}
}


# --------------------------------------------------------------------
#  mphMinutes - for Scale sMinutes, variable V(Minutes)
# --------------------------------------------------------------------

proc mphMinutes {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphMinutes($val)"}
}


# --------------------------------------------------------------------
#  mphJitter - for Entry eJitter, textvariable V(Jitter)
# --------------------------------------------------------------------

proc mphJitter {val} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphJitter($val)"}
}


# --------------------------------------------------------------------
#  mphEXIT - for Button bEXIT
# --------------------------------------------------------------------

proc mphEXIT {} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphEXIT()"}
}


# --------------------------------------------------------------------
#  mphCreate_Schedule - for Button bCreate_Schedule
# --------------------------------------------------------------------

proc mphCreate_Schedule {} {
    global OPT V
    if $OPT(debug) {puts "DEBUG: mphCreate_Schedule()"}
}

# ====================================================================
# Define widgets
# ====================================================================

. configure -background grey80

# --------------------------------------------------------------------
#  define menu
# --------------------------------------------------------------------

frame .menu1 

# Help
menubutton .menu1.mHelp -menu .menu1.mHelp.m -relief flat -text Help
menu .menu1.mHelp.m
.menu1.mHelp.m add command -label About -command mphHelpAbout
pack .menu1.mHelp -side left
pack .menu1 -expand 1 -fill x

# --------------------------------------------------------------------
#  Define other widgets
# --------------------------------------------------------------------

frame       .f1 
label       .lSatellite  -text Satellite
radiobutton .rM01  -text M01 -value M01 -variable V(r1) -command "mphRadio1 M01"
radiobutton .rM02  -text M02 -value M02 -variable V(r1) -command "mphRadio1 M02"
radiobutton .rN18  -text N18 -value N18 -variable V(r1) -command "mphRadio1 N18"
radiobutton .rN19  -text N19 -value N19 -variable V(r1) -command "mphRadio1 N19"
button      .bSet_Default_Values  -text Set_Default_Values -command mphSet_Default_Values
pack        .lSatellite .rM01 .rM02 .rN18 .rN19 .bSet_Default_Values -in .f1 -side left 
pack        .f1 

frame       .f2 
label       .lTIME  -text TIME
entry       .eTIME  -textvariable V(TIME)
pack        .lTIME .eTIME -in .f2 -side left 
pack        .f2 

frame       .f3 
label       .lREVOLUTION  -text REVOLUTION
entry       .eRevolution  -textvariable V(Revolution)
pack        .lREVOLUTION .eRevolution -in .f3 -side left 
pack        .f3 

frame       .f4 
label       .lNUMBER  -text NUMBER
entry       .eNUMBER  -textvariable V(NUMBER)
scale       .sNUMBER  -label NUMBER -variable V(NUMBER) -command mphNUMBER
pack        .lNUMBER .eNUMBER .sNUMBER -in .f4 -side left 
pack        .f4 

frame       .f5 
label       .lPROD_RULES  -text PROD_RULES
entry       .ePROD_RULES  -textvariable V(PROD_RULES)
pack        .lPROD_RULES .ePROD_RULES -in .f5 -side left 
pack        .f5 

frame       .f6 
label       .lLOC_ID  -text LOC_ID
radiobutton .rSVL  -text SVL -value SVL -variable V(r2) -command "mphRadio2 SVL"
radiobutton .rFBK  -text FBK -value FBK -variable V(r2) -command "mphRadio2 FBK"
radiobutton .rWAL  -text WAL -value WAL -variable V(r2) -command "mphRadio2 WAL"
entry       .esite  -textvariable V(site)
pack        .lLOC_ID .rSVL .rFBK .rWAL .esite -in .f6 -side left 
pack        .f6 

frame       .f7 
label       .lMPF_ACQ_SITE  -text MPF_ACQ_SITE
radiobutton .rCDA1  -text CDA1 -value CDA1 -variable V(r3) -command "mphRadio3 CDA1"
radiobutton .rCDA2  -text CDA2 -value CDA2 -variable V(r3) -command "mphRadio3 CDA2"
radiobutton .rDEW_  -text DEW_ -value DEW_ -variable V(r3) -command "mphRadio3 DEW_"
pack        .lMPF_ACQ_SITE .rCDA1 .rCDA2 .rDEW_ -in .f7 -side left 
pack        .f7 

frame       .f8 
label       .lDATA_SOURCE  -text DATA_SOURCE
radiobutton .rGAC  -text GAC -value GAC -variable V(r4) -command "mphRadio4 GAC"
radiobutton .rGDS  -text GDS -value GDS -variable V(r4) -command "mphRadio4 GDS"
pack        .lDATA_SOURCE .rGAC .rGDS -in .f8 -side left 
pack        .f8 

frame       .f9 
checkbutton .cVCIDFILTERING  -text VCIDFILTERING -variable V(VCIDFILTERING) -command {mphVCIDFILTERING $V(VCIDFILTERING)}
pack        .cVCIDFILTERING -in .f9 -side left 
pack        .f9 

frame       .f10 
checkbutton .cREVERSE_MODE  -text REVERSE_MODE -variable V(REVERSE_MODE) -command {mphREVERSE_MODE $V(REVERSE_MODE)}
pack        .cREVERSE_MODE -in .f10 -side left 
pack        .f10 

frame       .f11 
label       .lMinutes  -text Minutes
entry       .eMinutes  -textvariable V(Minutes)
scale       .sMinutes  -label Minutes -variable V(Minutes) -command mphMinutes
pack        .lMinutes .eMinutes .sMinutes -in .f11 -side left 
pack        .f11 

frame       .f12 
label       .lJitter  -text Jitter
entry       .eJitter  -textvariable V(Jitter)
pack        .lJitter .eJitter -in .f12 -side left 
pack        .f12 

frame       .f13 
button      .bEXIT  -text EXIT -command mphEXIT
button      .bCreate_Schedule  -text Create_Schedule -command mphCreate_Schedule
pack        .bEXIT .bCreate_Schedule -in .f13 -side left 
pack        .f13 


# ====================================================================
# Some bindings
# ====================================================================


bind Entry <Return> {
    global V
    set name [string range [file extension %W] 2 end]
    mph$name $V($name)
}


#     _/_/_/_/  _/_/_/_/  _/_/_/_/_/
#    _/    _/  _/    _/      _/
#   _/_/_/_/  _/_/_/_/      _/
#  _/  _/    _/            _/
# _/    _/  _/            _/  (C) by AnTu

